{
  "$schema": "https://json-schema.org/draft/2020-12/schema",
  "$id": "https://raw.githubusercontent.com/InterwebAlchemy/llm-model-definitions/model.schema.json",
  "title": "Large Language Model",
  "description": "A large language model defintion for developer tools",
  "type": "object",
  "properties": {
    "modelId": {
      "description": "The identifier of the model (example: gpt-3.5-turbo)",
      "type": "string"
    },
    "modelName": {
      "description": "The human-friendly name of the model (example: GPT-3.5 Turbo)",
      "type": "string"
    },
    "modelProvider": {
      "description": "The provider of the model in lowercase (example: openai)",
      "type": "string"
    },
    "modelDescription": {
      "description": "A human-friendly description of the model",
      "type": "string"
    },
    "modelInfo": {
      "description": "Link to a page with more information about the model",
      "type": "string",
      "format": "uri"
    },
    "modelVersion": {
      "description": "The version of the model (example: 0613)",
      "type": "string"
    },
    "modelType": {
      "description": "The type of model (example: chat)",
      "type": "string",
      "enum": ["chat", "completion"]
    },
    "contextWindow": {
      "description": "The maximum number of tokens in the model's context window",
      "type": "integer",
      "minimum": 1
    },
    "costPerToken": {
      "description": "The cost per token in USD",
      "type": ["object", "number"],
      "minimum": 0,
      "properties": {
        "input": {
          "description": "The cost per token of input send to the model",
          "type": "number",
          "minimum": 0
        },
        "output": {
          "description": "The cost per token of output generated by the model",
          "type": "number",
          "minimum": 0
        }
      }
    },
    "knowledgeCutoff": {
      "description": "The training data cutoff date for the model",
      "type": "string",
      "format": "date"
    },
    "tokenEncoding": {
      "description": "What encoding the model uses for tokens (example: cl100k_base)",
      "type": "string",
      "enum": ["cl100k_base", "p50k_base", "p50k_edit", "r50k_base", "llama", "unknown"],
      "default": "unknown"
    },
    "tuning": {
      "description": "Tags for things the model was tuned for (example: function, instruction)",
      "type": "array",
      "items": {
        "type": "string"
      },
      "enum": ["function", "isntruction", "code"],
      "uniqueItems": true,
      "minItems": 1
    }
  },
  "required": ["modelId", "modelProvider", "modelType", "contextWindow"]
}
